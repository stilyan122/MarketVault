@model OperationFormModel

@using System.Text.Json;
@using System.Text.Json.Serialization;

@{
    ViewBag.Title = "Choose type of operation";
}

<div class="chooseOperationContainer">
    <form 
        id="chooseOperationForm">

        @Html.AntiForgeryToken()

        <div>
            <div>
                <label asp-for="CounterPartyId">Select counter party</label>
                <select asp-for="CounterPartyId">
                    <option disabled selected value="">Select Counter Party...</option>
                    @foreach (CounterPartyViewModel counterParty in Model.CounterParties)
                    {
                        <option value="@counterParty.Id">@counterParty.Name</option>
                    }
                </select>
            </div>
            <span asp-validation-for="CounterPartyId"></span>
        </div>

        <div>
            <div>
                <label asp-for="DocumentTypeId">Select document type</label>
                <select asp-for="DocumentTypeId">
                    <option disabled selected value="">Select Document Type...</option>
                    @foreach (DocumentTypeViewModel documentType in Model.DocumentTypes)
                    {
                        <option value="@documentType.Id">@documentType.Name</option>
                    }
                </select>
            </div>
            <span asp-validation-for="DocumentTypeId"></span>
        </div>

        <div>
            <label asp-for="Products">Products</label>
            @if (Model.Products.Count == 0)
            {
                <div>None</div>
            }
            else
            {
                @for (int i = 0; i < Model.Products.Count; i++)
                {
                    <input type="hidden" asp-for="ProductsJson" name="ProductsJson" 
                    id="@i"
                           value="@JsonSerializer.Serialize(Model.Products[i])" />

                    <input disabled value="@Model.Products[i].SalePrice"/>
                    <input disabled value="@Model.Products[i].PurchasePrice"/>
                }
            }
        </div>

        <button id="addNewProductToOperationBtn"
        >   
            Add New Product
        </button>

        <button id="addNewOperationBtn"
            >
            Add Operation
        </button>
    </form>
</div>

<script>
    var newProductBtn = document.getElementById('addNewProductToOperationBtn');
    var newOperationBtn = document.getElementById('addNewOperationBtn');
    var form = document.getElementById('chooseOperationForm');

    newProductBtn.addEventListener('click', function (event) {
        event.preventDefault();

        form.setAttribute('action', '/Operation/AddProductToOperation');
        form.setAttribute('method', 'get');
        if (form.reportValidity()) {
            form.submit();
        }
    });

    newOperationBtn.addEventListener('click', function (event) {
        event.preventDefault();

        form.setAttribute('action', '/Operation/AddNewOperation');
        form.setAttribute('method', 'post');
        if (form.reportValidity()) {
            form.submit();
        }
    });

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}