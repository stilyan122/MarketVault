@model IEnumerable<OperationViewModel>

@{
    ViewBag.Title = "Your operations";
}

<script>
    let props = {};
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.13.0/umd/react.development.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.13.0/umd/react-dom.development.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.7.1/remarkable.min.js"></script>

<script src="@Url.Content("~/js/marketvault/src/Components/OperationViewComponent.jsx")"></script>

<div class="yourOperationsContainer">
    <div class="yourOperationOperationContainer">

        <script>
            props = {
                dateMade: 'Operation Date Made',
                productsCount: 'Operation Products Count',
                counterParty: 'Operation Counter Party',
                documentType: 'Operation Document Type',
                totalPurchasePriceWithoutVAT: 'Operation Total Purchase Price Without VAT',
                totalPurchasePriceWithVAT: 'Operation Total Purchase Price With VAT',
                totalSalePriceWithoutVAT: 'Operation Total Sale Price Without VAT',
                totalSalePriceWithVAT: 'Operation Total Sale Price With VAT'
            };

            ReactDOM.render(
                React.createElement(OperationViewComponent, props),
                document.getElementsByClassName('yourOperationOperationContainer')[0],
            );
        </script>
    </div>
    @{
        var counter = 200;
    }

    @foreach (OperationViewModel operation in Model)
    {
        <div class="@counter">
            <script>
                props = {
                    dateMade: '@operation.DateMade',
                    productsCount: '@operation.ProductsCount',
                    counterParty: '@operation.CounterParty',
                    documentType: '@operation.DocumentType',
                    totalPurchasePriceWithoutVAT: '@operation.TotalPurchasePriceWithoutVAT',
                    totalPurchasePriceWithVAT: '@operation.TotalPurchasePriceWithVAT',
                    totalSalePriceWithoutVAT: '@operation.TotalSalePriceWithoutVAT',
                    totalSalePriceWithoutVAT: '@operation.TotalSalePriceWithVAT'
                };

                ReactDOM.render(
                    React.createElement(OperationViewComponent, props),
                    document.getElementsByClassName('@counter')[0],
                );
            </script>
        </div>

        counter++;
    }   
</div>