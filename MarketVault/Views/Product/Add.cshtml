@model ProductFormModel

@{
    ViewBag.Title = "Add product";
}

<div class="addProductContainer">
    <form asp-action="Add" asp-controller="Product" id="addProductForm">
        <div>
            <div>
                <label asp-for="Name"> Product name</label>
                <input asp-for="Name" />
            </div>
            <span asp-validation-for="Name"></span>
        </div>
        <div>
            <div>
                <label asp-for="CashRegisterName"> Product cash register name</label>
                <input asp-for="CashRegisterName" />
            </div>
            <span asp-validation-for="CashRegisterName"></span>
        </div>
        <div>
            <div>
                <label asp-for="CodeForScales"> Product code for scales</label>
                <input asp-for="CodeForScales" type="number" />
            </div>
        </div>
        <div>
            <div>
                <label asp-for="SalePrice"> Product sale price</label>
                <input id="SalePriceInput" asp-for="SalePrice" />
            </div>
            <span asp-validation-for="SalePrice"></span>
        </div>
        <div>
            <div>
                <label asp-for="PurchasePrice">Product purchase price</label>
                <input id="PurchasePriceInput" asp-for="PurchasePrice" />
            </div>
            <span asp-validation-for="PurchasePrice"></span>
        </div>
        <div>
            <div class="productDescriptionDiv">
                <label asp-for="Description">Product description</label>
                <textarea asp-for="Description" rows="2" cols="2"></textarea>
            </div>
            <span asp-validation-for="Description"></span>
        </div>
        <div>
            <div>
                <label asp-for="ItemGroupId">Select item group</label>
                <select asp-for="ItemGroupId">
                    <option disabled selected value="">Select Item Group...</option>
                    @foreach (ItemGroupViewModel itemGroup in Model.ItemGroups)
                    {
                        <option value="@itemGroup.Id">@itemGroup.Name</option>
                    }
                </select>
            </div>
            <span asp-validation-for="ItemGroupId"></span>
        </div>
        <div>
            <div>
                <label asp-for="MeasureId">Select measure</label>
                <select asp-for="MeasureId">
                    <option disabled selected value="">Select Measure...</option>
                    @foreach (MeasureViewModel measure in Model.Measures)
                    {
                        <option value="@measure.Id">@measure.Value</option>
                    }
                </select>
            </div>
            <span asp-validation-for="MeasureId"></span>
        </div>

        <div id="popUpContainerOverlay">
            <div id="popUpContainer">
                <div id="xBtnDiv">
                    <a id="xBtn">
                        ✘
                    </a>
                    <input id="barcodeInputField"/>
                    <p id="barcodeValidation">Input value for barcode must be between @Model.BarcodeMinLength and
                        @Model.BarcodeMaxLength characters long!
                    </p>
                </div>
                <button type="button" id="addBarcodeSubmitBtn">Add barcode</button>
            </div>
        </div>

        <input type="hidden" value="@Model.BarcodeMaxLength" id="barcodeMaxLengthInput"/>

        <input type="hidden" value="@Model.BarcodeMinLength" id="barcodeMinLengthInput"/>

        <div class="barcodes">
            Barcodes
            <div>
                <div id="barcodesDivContainer">
                </div>
            </div>
        </div>

        <button type="button" id="addBarcodeBtn">Add Barcode</button>


        <button type="submit" id="addProductBtn">Add Product</button>
    </form>
</div>

<script>
    var popUpContainerOverlay = document.getElementById("popUpContainerOverlay");
    var popUpContainer = document.getElementById("popUpContainer");
    var validation = document.getElementById('barcodeValidation');

    popUpContainerOverlay.style.display = 'none';
    popUpContainer.style.display = 'none';
    validation.style.display = 'none';

    var btn = document.getElementById('addBarcodeBtn');

    var addBarcodeBtn = document.getElementById('addBarcodeSubmitBtn');

    btn.addEventListener('click', function(event)
    {
        validation.style.display = 'none';
        var xMark = document.getElementById('xBtn');

        xMark.addEventListener('click', function (event2) {
            event2.preventDefault();
            popUpContainer.style.display = 'none';
            popUpContainerOverlay.style.display = 'none';
        });

        popUpContainerOverlay.style.display = 'flex';
        popUpContainer.style.display = 'block';

        popUpContainer.addEventListener('click', function (event2) {
            event2.stopPropagation();
        });

        popUpContainerOverlay.addEventListener('click', function (event2) {
            event2.preventDefault();

            popUpContainer.style.display = 'none';
            popUpContainerOverlay.style.display = 'none';
        });

        addBarcodeBtn.addEventListener('click', function (event) {
            var barcodeInputField = document.getElementById('barcodeInputField');
            var inputValue = barcodeInputField.value;
            var maxLengthValue = document.getElementById('barcodeMaxLengthInput').value;
            var minLengthValue = document.getElementById('barcodeMinLengthInput').value;

            if (inputValue.length <= maxLengthValue && 
                inputValue.length >= minLengthValue) {
                var parent = document.getElementById('barcodesDivContainer');

                validation.style.display = 'none';  
                var divElement = document.createElement('div');
                var deleteBarcodeButton = document.createElement('div');
                deleteBarcodeButton.textContent = '✘';
                deleteBarcodeButton.classList.add('removeBarcode');
                deleteBarcodeButton.onclick = function () {
                    parent.removeChild(divElement);
                };
                divElement.classList.add('barcode')
                divElement.appendChild(deleteBarcodeButton);
                var barcode = document.createElement('div');
                barcode.textContent = inputValue;
                divElement.appendChild(barcode);

                var collectionName = "Barcodes";

                var domElement = document.createElement('input');
                domElement.value = inputValue;
                domElement.type = "hidden";
                domElement.name = collectionName;
                divElement.appendChild(domElement);

                parent.appendChild(divElement);
                popUpContainer.style.display = 'none';
                popUpContainerOverlay.style.display = 'none';
                barcodeInputField.value = '';
            } else{
                validation.style.display = 'block';
            }
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}